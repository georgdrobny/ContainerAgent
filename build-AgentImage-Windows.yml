trigger: none

parameters:
- name: DownloadAgent
  displayName: Download and Install Latest Pipeline Agent
  type: boolean
  default: False
 
jobs:
- job: 'BuildAgentImage'
  timeoutInMinutes: 90

  pool:
    vmImage: 'windows-2019'

  variables:
    baseImageName: 'mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2019'
    imageRepository: 'pipeline-agent'
    containerRegistry: 'containeragent'
    sourceDir : '$(build.SourcesDirectory)\\windows\\'
    workingDir : '$(build.ArtifactStagingDirectory)\\agent\\'
    dockerfilePath: '$(build.ArtifactStagingDirectory)\\agent\\Dockerfile'
    download: $[${{ parameters.DownloadAgent }}]
    agentPackage: '<none>'
    tag: 'windows'

  steps:
  - powershell: |
     $package = windows/DownloadAgent.ps1 -AzureDevOpsOrganization $(AzureDevOpsOrganization) -AzureDevOpsPersonalAccessToken $(AzureDevOpsToken) -DestinationDirectory $(Build.ArtifactStagingDirectory)
     Write-Host "##vso[task.setvariable variable=agentPackage]$package"
    condition: eq(variables.download,true) 
    displayName: 'Download Agent Package'
  - powershell: |
     $tag = windows/BuildAgentImage.ps1 -WorkingDir $(workingDir) -SourceDir $(sourceDir) -AgentPackage $(agentPackage)
     Write-Host "##vso[task.setvariable variable=tag]$tag"
  - task: Docker@2
    displayName: Build and push Windows Pipeline Agent Image
    inputs:
      command: buildAndPush
      repository: $(imageRepository)
      dockerfile: $(dockerfilePath)
      containerRegistry: '$(containerRegistry)'
      tags: |
        $(tag)
      
      