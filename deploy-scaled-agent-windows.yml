trigger: none

parameters:
- name: PoolName
  displayName: Pool Name
  type: string
  default: windows-2022-container
  values:
    - windows-2022-container
    - windows-2025-container
- name: AgentImage
  displayName: Agent Image
  type: string
  default: windows-2022
  values:
    - windows-2022
    - windows-2025
- name: CheckLatest
  displayName: Check for latest Image
  type: boolean
  default: true
- name: Repo
  displayName: Agent Repo
  type: string
  default: georgmcaps
  values:
    - containeragent
    - georgd
    - georgmcaps
    
variables:
- group: AzureDevOps
- name: poolId
  value: 0
- name: chartPath
  value: 'windows/helm'
- name: checkLatest
  value: $[${{ parameters.CheckLatest }}]

pool:
  vmImage: ubuntu-latest

steps:
- pwsh: |
    $poolId = common/GetPoolId.ps1 -AzureDevOpsOrganization $(AzureDevOpsOrganization) -AzureDevOpsPersonalAccessToken $(AzureDevOpsToken) -PoolName ${{ parameters.PoolName }}
    Write-Host "##vso[task.setvariable variable=poolId]$poolId"
    [System.Uri] $uri = [System.Uri]::new("$(AzureDevOpsOrganization)")
    $orgName = $uri.Segments[-1].ToLower() -replace "/",""
    $namespace="{0}-pool-{1}" -f $orgName, $poolId
    Write-Host "Poolid:$poolId"
    Write-Host "Namespace:$namespace"
    Write-Host "##vso[task.setvariable variable=namespace]$namespace"
  displayName: Get PoolId from PoolName
- task: AzureCLI@2
  inputs:
    azureSubscription: 'mcap-453255'
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      $tags = (az acr repository show-tags --name ${{parameters.repo}} --repository pipeline-agent --output tsv --orderby time_desc)
      $AgentImage = $tags | Where-Object { $_ -match "${{parameters.AgentImage}}-\d.\d+.\d" } | Select-Object -First 1
      Write-Host "##vso[task.setvariable variable=agentImage]$AgentImage"
  condition: eq(variables.checkLatest, true)
  displayName: Find last Image Tag
- pwsh: |
    $AgentImage = "${{parameters.AgentImage}}-latest"
    Write-Host "##vso[task.setvariable variable=agentImage]$AgentImage"
  displayName: Using the 'latest' Image Tag
  condition: eq(variables.checkLatest, false)
- pwsh: |
    Write-Host "Using Image:$(agentImage)"
  displayName: Pipeline Agent Image Tag
- task: KubeloginInstaller@0
  inputs:
    kubeloginVersion: 'latest'
- task: HelmDeploy@0
  enabled: true
  condition: ne(variables.poolId, 0)
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscription: 'mcap-453255'
    azureResourceGroup: 'aks-mixed'
    kubernetesCluster: 'aks-mixed'
    command: 'install'
    chartType: 'FilePath'
    chartPath: '$(chartPath)'
    releaseName: '$(namespace)'
    overrideValues: 'repo=${{parameters.repo}}.azurecr.io,poolId=$(poolId),poolName=${{parameters.PoolName}},tag=$(agentImage),namespace=$(namespace),azpUrl=$(AzureDevOpsOrganization),azpToken=$(AzureDevOpsToken)'
