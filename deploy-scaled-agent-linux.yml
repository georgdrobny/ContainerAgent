trigger: none

parameters:
- name: PoolName
  displayName: Pool Name
  type: string
  default: linux-container
  values:
    - linux-container
- name: AgentImage
  displayName: Agent Image
  type: string
  default: ubuntu-20.04-latest
  values:
    - ubuntu-20.04-latest
    - ubuntu-22.04-latest
- name: CheckLatest
  displayName: Check for latest Image
  type: boolean
- name: Repo
  displayName: Agent Repo
  type: string
  default: georgd
  values:
    - containeragent
    - georgd

variables:
- group: AzureDevOps
- name: poolId
  value: 0
- name: chartPath
  value: 'linux/helm'

pool:
  vmImage: ubuntu-latest

steps:
- task: HelmInstaller@0
  inputs:
    helmVersion: '3.8.0'
    installKubectl: false
- pwsh: |
    $poolId = common/GetPoolId.ps1 -AzureDevOpsOrganization $(AzureDevOpsOrganization) -AzureDevOpsPersonalAccessToken $(AzureDevOpsToken) -PoolName ${{ parameters.PoolName }}
    Write-Host "##vso[task.setvariable variable=poolId]$poolId"
    [System.Uri] $uri = [System.Uri]::new("$(AzureDevOpsOrganization)")
    $namespace="{0}-pool-{1}" -f $uri.Segments[-1], $poolId
    Write-Host "##vso[task.setvariable variable=namespace]$namespace"
  displayName: Get PoolId from PoolName
- pwsh: |
    $tags = (az acr repository show-tags --name ${{parameters.repo}} --repository pipeline-agent --output tsv --orderby time_desc)
    $tags
  displayName: Find latest Image Tag
  condition: eq(parameters.CheckLatest, true)
- task: HelmDeploy@0
  enabled: false
  condition: ne(variables.poolId, 0)
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: 'aks-mixed'
    command: 'install'
    chartType: 'FilePath'
    chartPath: '$(chartPath)'
    releaseName: '$(namespace)'
    overrideValues: 'repo=${{parameters.repo}}.azurecr.io,poolId=$(poolId),poolName=${{parameters.PoolName}},tag=${{parameters.AgentImage}},namespace=$(namespace),azpUrl=$(AzureDevOpsOrganization),azpToken=$(AzureDevOpsToken)'