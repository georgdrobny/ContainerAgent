name: Agent Image Linux

on:
  workflow_dispatch:
    inputs:
      downloadAgent:
        description: Download and Install Latest Pipeline Agent
        required: true
        type: boolean
        default: 'true'
jobs:
  build:
    strategy:
       matrix:
         include:
           - dockerfile: 'dockerfile-ubuntu-1804'
             repoName: 'ubuntu-18.04'
             os: 'ubuntu-18.04'
           - dockerfile: 'dockerfile-ubuntu-2004'
             reponame: 'ubuntu-20.04'
             os: 'ubuntu-20.04'         
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Download Agent Package
      id: download_agent
      run: |
        $package = common/DownloadAgent.ps1 -AzureDevOpsOrganization ${{ secrets.AZURE_DEVOPS_ORGANIZATION }} -AzureDevOpsPersonalAccessToken ${{ secrets.AZURE_DEVOPS_TOKEN }} -DestinationDirectory ${{ runner.temp }}
        Write-Output "agentPackage=$package" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh
      if: ${{ github.event.inputs.downloadAgent == 'true' }}
    - name: Prepare Linux Pipeline Agent Image
      run: |
        $tag = linux/BuildAgentImage.ps1 -WorkingDir '${{ github.workspace }}/agent/' -SourceDir '${{ github.workspace }}/linux/' -AgentPackage $ENV:agentPackage -Tag ${{ matrix.repoName }} -Dockerfile ${{ matrix.dockerfile }}
        Write-Output "tag=$tag" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh
    - name: Login to Azure Container Registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.ACR_NAME }}.azurecr.io 
        username: ${{ secrets.ACR_USER }}
        password: ${{ secrets.ACR_PASSWORD }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1  
    - name: Build and push Linux Pipeline Agent Image
      uses: docker/build-push-action@v2
      with:
        context: ${{ github.workspace }}/agent
        file: ${{ matrix.dockerfile }}
        push: true
        tags: ${{ secrets.ACR_NAME }}.azurecr.io/pipeline-agent:${{ env.tag }}
